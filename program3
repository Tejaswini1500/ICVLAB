import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image in color
image_path ="C:\\Users\\Student\\Downloads\\numbers-tiger-populations.webp"  # Replace with your image path
image = cv2.imread(image_path, cv2.IMREAD_COLOR)  # Load in BGR format

# Check if image loading was successful
if image is None:
    print(f'Failed to load image from {image_path}')
else:
    # Display the original image
    plt.figure(figsize=(8, 8))
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for displaying with matplotlib
    plt.title('Original Image')
    plt.axis('off')
    plt.show()

    # Erosion
    kernel2 = np.ones((3, 3), np.uint8)
    image_erode2 = cv2.erode(image, kernel2)
    plt.figure(figsize=(8, 8))
    plt.imshow(cv2.cvtColor(image_erode2, cv2.COLOR_BGR2RGB))
    plt.title('Eroded Image')
    plt.axis('off')
    plt.show()

    # Dilation
    kernel3 = np.ones((5, 5), np.uint8)  # Adjusted kernel size
    image_dilation = cv2.dilate(image, kernel3, iterations=1)
    plt.figure(figsize=(8, 8))
    plt.imshow(cv2.cvtColor(image_dilation, cv2.COLOR_BGR2RGB))
    plt.title('Dilated Image')
    plt.axis('off')
    plt.show()

    # Opening
    kernel_open = np.ones((7, 7), dtype=np.uint8)  # Adjusted kernel size
    image_opening = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel_open)
    plt.figure(figsize=(8, 8))
    plt.imshow(cv2.cvtColor(image_opening, cv2.COLOR_BGR2RGB))
    plt.title('Opened Image')
    plt.axis('off')
    plt.show()

    # Closing
    kernel_close = np.ones((7, 7), dtype=np.uint8)  # Adjusted kernel size
    image_close = cv2.morphologyEx(image, cv2.MORPH_CLOSE, kernel_close)
    plt.figure(figsize=(8, 8))
    plt.imshow(cv2.cvtColor(image_close, cv2.COLOR_BGR2RGB))
    plt.title('Closed Image')
    plt.axis('off')
    plt.show()
