import cv2
import numpy as np
from matplotlib import pyplot as plt

# Load your image (replace 'path_to_your_image.jpg' with your actual image path)
image_rgb = cv2.imread("C:\\Users\\Student\\Downloads\\numbers-tiger-populations.webp", cv2.IMREAD_COLOR)

# Check if image loading was successful
if image_rgb is None:
    print(f'Failed to load image from {image_path}')
else:
    # Display the image in RGB color space
    print("Image in the RGB color space:")
    plt.imshow(cv2.cvtColor(image_rgb, cv2.COLOR_BGR2RGB))
    plt.axis('off')
    plt.show()

    # Convert RGB to HSV
    image_hsv = cv2.cvtColor(image_rgb, cv2.COLOR_BGR2HSV)

    # Display the image in HSV color space
    print("\nImage in the HSV color space:")
    plt.imshow(cv2.cvtColor(image_hsv, cv2.COLOR_HSV2RGB))
    plt.axis('off')
    plt.show()

    # Normalize the RGB image
    image_normalized = image_rgb / 255.0

    # Calculate CMYK components
    C = 1 - image_normalized[:, :, 2]  # Cyan
    M = 1 - image_normalized[:, :, 1]  # Magenta
    Y = 1 - image_normalized[:, :, 0]  # Yellow
    K = np.min([C, M, Y], axis=0)      # Key (Black)

    # Create a CMYK image by stacking the CMYK channels
    image_cmyk = np.dstack((C, M, Y, K))

    # Scale the CMYK channels to the 0-255 range
    image_cmyk = (image_cmyk * 255).astype(np.uint8)

    # Display the image in CMYK color space
    print("\nImage in the CMYK color space:")
    plt.imshow(image_cmyk)
    plt.axis('off')
    plt.show()

    # Convert RGB to grayscale
    image_gray = cv2.cvtColor(image_rgb, cv2.COLOR_BGR2GRAY)

    # Display the grayscale image
    print("\nImage in the grayscale color space:")
    plt.imshow(image_gray, cmap='gray')
    plt.axis('off')
    plt.show()
